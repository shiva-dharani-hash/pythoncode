POLYNOMIAL MANIPULATON

class Polynomial:
def __init__(self,coeffs):
self.coeffs=coeffs
def evaluate(self,x):
result=0
for exp,coeff in self.coeffs.items():
result+= coeff*(x**exp)
return result
def __add__(self,other):
result_coeffs={}
for exp,coeff in self.coeffs.items():
result_coeffs[exp]=coeff
for exp,coeff in other.coeffs.items():
result_coeffs[exp]= result_coeffs.get(exp,0)+ coeff
return Polynomial(result_coeffs)
def __str__(self):
terms=[]
for exp,coeff in self.coeffs.items():
if exp==0:
term=str(coeff)
elif exp==1:
term= f&quot;{coeff}x&quot;
else:
term= f&quot;{coeff}x^{exp}&quot;
terms.append(term)
return &quot;+&quot;.join(terms)

p1=Polynomial({2:3,1:2,0:5})
p2=Polynomial({2:2,1:-1,0:3})
print(&quot;Polynomial 1 : &quot;, p1)
print(&quot;Polynomial 2 : &quot;,p2)
sum_poly= p1+p2
print(&quot;Sum : &quot;, sum_poly)
x_val=2
print(f&quot;Evaluating at x = {x_val}:&quot;)
print(&quot;Poly 1 : &quot;,p1.evaluate(x_val))
print(&quot;Poly 2 : &quot;,p2.evaluate(x_val))
print(&quot;Sum : &quot;,sum_poly.evaluate(x_val))

OUTPUT:


Polynomial 1 : 3x^2+2x+5
Polynomial 2 : 2x^2+-1x+3
Sum : 5x^2+1x+8
Evaluating at x = 2:
Poly 1 : 21
Poly 2 : 9
Sum : 30